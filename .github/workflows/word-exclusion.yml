name: Word Exclusion

on:
  push:
    branches:
      - 'tmo-main'

jobs:
  word_exclusion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PowerShell Core
        run: |
          wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Get directory paths from .gitattributes
        run: |
          directories=$(tail -n +18 .gitattributes | awk '{print $1}' | grep -v -E '^\s*#|merge=ours')
          echo "::set-output name=directories::$directories"

      - name: Run Word Search script
        run: |
          $WordList = @("pet", "tracker") # Add the words you want to find here
          $Matches = @()

          # Read the .gitattributes file starting from line 18
          $GitAttributes = Get-Content -Path .gitattributes | Select-Object -Skip 17

          # Extract directories and files from .gitattributes using regex
          $Directories = $GitAttributes -match '^(\S+\/?)\s+(-?)(?!\s*#)'

          foreach ($Directory in $Directories) {
            $Directory = $Directory.Trim()

            if (Test-Path $Directory) {
              Get-ChildItem -Path $Directory -Recurse -Include * -File, * | ForEach-Object {
                $FileName = $_.FullName

                foreach ($Word in $WordList) {
                  if (Select-String -Path $FileName -Pattern $Word -Quiet) {
                    $Matches += New-Object PSObject -Property @{
                      Directory = $Directory
                      Match = $Word
                      File = $FileName
                    }
                  }
                }
              }
            }
          }

          $Matches | ConvertTo-Json -Depth 100 | Out-File matches.json
        env:
          DIRECTORIES: ${{ steps.GetDirectories.outputs.directories }}
        shell: pwsh

      - name: Upload JSON output
        uses: actions/upload-artifact@v2
        with:
          name: matches
          path: matches.json
